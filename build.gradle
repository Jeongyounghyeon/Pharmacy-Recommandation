plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.1'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'groovy'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

bootJar {
	archiveFileName = 'app.jar'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// https://mvnrepository.com/artifact/org.spockframework/spock-core
	testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.4-M1-groovy-4.0'
	// https://mvnrepository.com/artifact/org.spockframework/spock-spring
	testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.4-M1-groovy-4.0'

	// 런타임에 클래스 기반 spock mock을 만들기 위해서 필요
	testImplementation('net.bytebuddy:byte-buddy')

	// testcontainers
	testImplementation "org.testcontainers:spock"
	testImplementation "org.testcontainers:mariadb"

	// https://mvnrepository.com/artifact/org.springframework.retry/spring-retry
	implementation group: 'org.springframework.retry', name: 'spring-retry', version: '2.0.5'

	// https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
	testImplementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '5.0.0-alpha.12'
	// https://mvnrepository.com/artifact/com.squareup.okhttp3/mockwebserver
	testImplementation group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '5.0.0-alpha.12'

}

tasks.named('test') {
	useJUnitPlatform()
}
